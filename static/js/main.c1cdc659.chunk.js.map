{"version":3,"sources":["App.js","index.js"],"names":["dontlook","file","nodeId","setNode","setErrorMsg","a","console","log","fetch","method","headers","then","response","json","data","err","toLowerCase","Object","values","nodes","setThumbnail","images","getFrameTypeFromName","name","slice","Node","node","thumbnailUrl","document","width","absoluteBoundingBox","height","className","join","alt","src","App","figmaUrl","URL","window","location","href","search","fileId","split","getUrlData","React","useState","setThumbnailUrl","errorMsg","getNodeData","useCallback","getNode","getThumbnail","useEffect","undefined","rootElement","getElementById","ReactDOM","render"],"mappings":"kPAIMA,EAAW,8C,4CAMjB,WAAuBC,EAAMC,EAAQC,EAASC,GAA9C,SAAAC,EAAA,6DACEC,QAAQC,IAAI,gBADd,SAEQC,MAAM,kCAAD,OAAmCP,EAAnC,sBAAqDC,GAAU,CACxEO,OAAQ,MACRC,QAAS,CACP,gBAAiBV,KAElBW,MAAK,SAACC,GACPA,EAASC,OAAOF,MAAK,SAACG,GAEfA,EAAKC,IAGRX,EAAY,QAAUU,EAAKC,IAAIC,eAF/Bb,EAAQc,OAAOC,OAAOJ,EAAKK,OAAO,UAX1C,4C,kEAoBA,WAA4BlB,EAAMC,EAAQkB,EAAchB,GAAxD,SAAAC,EAAA,6DACEC,QAAQC,IAAI,qBADd,SAEQC,MAAM,mCAAD,OAAoCP,EAApC,gBAAgDC,EAAhD,YAAkE,CAC3EO,OAAQ,MACRC,QAAS,CACP,gBAAiBV,KAElBW,MAAK,SAACC,GACPA,EAASC,OAAOF,MAAK,SAACG,GAEfA,EAAKC,IAGRX,EAAY,aAAeU,EAAKC,IAAIC,eAFpCI,EAAaH,OAAOC,OAAOJ,EAAKO,QAAQ,UAXhD,4C,sBAoBA,IAAMC,EAAuB,SAACC,GAC5B,OAAIA,EACqC,WAAnCA,EAAKC,MAAM,EAAG,GAAGR,cACZ,OACqC,QAAnCO,EAAKC,MAAM,EAAG,GAAGR,cACnB,KAEA,UAGF,WAKLS,EAAO,SAAC,GAA4B,IAAD,UAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAChBJ,EAAI,OAAGG,QAAH,IAAGA,GAAH,UAAGA,EAAME,gBAAT,aAAG,EAAgBL,KACvBM,EAAK,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAME,gBAAT,iBAAG,EAAgBE,2BAAnB,aAAG,EAAqCD,MAC7CE,EAAM,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAME,gBAAT,iBAAG,EAAgBE,2BAAnB,aAAG,EAAqCC,OAElD,OACE,yBAAQC,UAAW,CAAC,QAASV,EAAqBC,IAAOU,KAAK,KAA9D,UACE,qBAAKC,IAAKX,EAAMM,MAAOA,EAAOE,OAAQA,EAAQI,IAAKR,IAClDJ,GAAQ,qCAAaA,QAyBb,SAASa,IACtB,MApBiB,WACjB,IAAIrB,EAIEsB,EADM,IAAIC,IAAIC,OAAOC,SAASC,MACfC,OAAOlB,MAAM,GAG5BmB,EAASN,EAASO,MAAM,KAAK,GAC7B1C,EAASmC,EAASO,MAAM,aAAa,GAM3C,OAJKD,GAAWzC,IACda,EAAM,qBAGD,CAAE4B,SAAQzC,SAAQa,OAKE8B,GAAnBF,EAAR,EAAQA,OAAQzC,EAAhB,EAAgBA,OAEhB,EAAwB4C,IAAMC,WAA9B,mBAAOrB,EAAP,KAAavB,EAAb,KACA,EAAwC2C,IAAMC,WAA9C,mBAAOpB,EAAP,KAAqBqB,EAArB,KACA,EAAgCF,IAAMC,WAAtC,mBAAOE,EAAP,KAAiB7C,EAAjB,KAEM8C,EAAcJ,IAAMK,aAAY,Y,0CACpCC,CAAQT,EAAQzC,EAAQC,EAASC,G,0CACjCiD,CAAaV,EAAQzC,EAAQ8C,EAAiB5C,KAC7C,CAACuC,EAAQzC,IAMZ,OAJA4C,IAAMQ,WAAU,WACdJ,MACC,CAACA,IAEAD,EAEA,uEAEE,uBACA,gCAAQA,OAKV,mCACGvB,GAAQC,EACP,cAAC,EAAD,CACED,KAAMA,QAAc6B,EACpB5B,aAAcD,GAAQC,EAAeA,OAAe4B,IAGtD,6CC9HV,IAAMC,EAAc5B,SAAS6B,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACvB,EAAD,MAEFoB,K","file":"static/js/main.c1cdc659.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\n\n// Replace with real key via env var\nconst dontlook = \"319103-d4024638-8b39-4977-b816-d1160c522012\";\n\n// const exampleFile = \"i4jMv6nOz9sIAFzw6X3Gbb\";\n// const exampleNode = \"2093%3A5041\";\n\n// Get the frame, set it\nasync function getNode(file, nodeId, setNode, setErrorMsg) {\n  console.log(\"getting node\");\n  await fetch(`https://api.figma.com/v1/files/${file}/nodes?ids=${nodeId}`, {\n    method: \"GET\",\n    headers: {\n      \"X-FIGMA-TOKEN\": dontlook\n    }\n  }).then((response) => {\n    response.json().then((data) => {\n      // console.log(\"got node\", data);\n      if (!data.err) {\n        setNode(Object.values(data.nodes)[0]);\n      } else {\n        setErrorMsg(\"Node \" + data.err.toLowerCase());\n      }\n    });\n  });\n}\n\n// Get the thumbnail\nasync function getThumbnail(file, nodeId, setThumbnail, setErrorMsg) {\n  console.log(\"getting thumbnail\");\n  await fetch(`https://api.figma.com/v1/images/${file}?ids=${nodeId}&scale=2`, {\n    method: \"GET\",\n    headers: {\n      \"X-FIGMA-TOKEN\": dontlook\n    }\n  }).then((response) => {\n    response.json().then((data) => {\n      // console.log(\"got thumbnail\", data);\n      if (!data.err) {\n        setThumbnail(Object.values(data.images)[0]);\n      } else {\n        setErrorMsg(\"Thumbnail \" + data.err.toLowerCase());\n      }\n    });\n  });\n}\n\n// Get whether the frame is a 'do' or 'dont' example\nconst getFrameTypeFromName = (name) => {\n  if (name) {\n    if (name.slice(0, 6).toLowerCase() === \"don't \") {\n      return \"dont\";\n    } else if (name.slice(0, 3).toLowerCase() === \"do \") {\n      return \"do\";\n    } else {\n      return \"unknown\";\n    }\n  } else {\n    return \"unknown\";\n  }\n};\n\n// Render a node+thumbnail into a figure element\nconst Node = ({ node, thumbnailUrl }) => {\n  let name = node?.document?.name;\n  let width = node?.document?.absoluteBoundingBox?.width;\n  let height = node?.document?.absoluteBoundingBox?.height;\n\n  return (\n    <figure className={[\"frame\", getFrameTypeFromName(name)].join(\" \")}>\n      <img alt={name} width={width} height={height} src={thumbnailUrl} />\n      {name && <figcaption>{name}</figcaption>}\n    </figure>\n  );\n};\n\n// Parse the data in the URL\nconst getUrlData = () => {\n  let err;\n\n  // Get whole url data\n  const url = new URL(window.location.href);\n  const figmaUrl = url.search.slice(3);\n\n  // Parse figma url components\n  const fileId = figmaUrl.split(\"/\")[4];\n  const nodeId = figmaUrl.split(\"?node-id=\")[1];\n\n  if (!fileId || !nodeId) {\n    err = \"Couldnt parse URL\";\n  }\n\n  return { fileId, nodeId, err };\n};\n\n// Render\nexport default function App() {\n  const { fileId, nodeId } = getUrlData();\n\n  const [node, setNode] = React.useState();\n  const [thumbnailUrl, setThumbnailUrl] = React.useState();\n  const [errorMsg, setErrorMsg] = React.useState();\n\n  const getNodeData = React.useCallback(() => {\n    getNode(fileId, nodeId, setNode, setErrorMsg);\n    getThumbnail(fileId, nodeId, setThumbnailUrl, setErrorMsg);\n  }, [fileId, nodeId]);\n\n  React.useEffect(() => {\n    getNodeData();\n  }, [getNodeData]);\n\n  if (errorMsg) {\n    return (\n      <p>\n        URL may be malformed or not supported.\n        <br />\n        <small>{errorMsg}</small>\n      </p>\n    );\n  } else {\n    return (\n      <>\n        {node && thumbnailUrl ? (\n          <Node\n            node={node ? node : undefined}\n            thumbnailUrl={node && thumbnailUrl ? thumbnailUrl : undefined}\n          />\n        ) : (\n          <p>Loading...</p>\n        )}\n      </>\n    );\n  }\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}